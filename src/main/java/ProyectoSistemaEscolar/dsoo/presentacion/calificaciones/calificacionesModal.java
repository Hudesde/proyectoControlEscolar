package ProyectoSistemaEscolar.dsoo.presentacion.calificaciones;

import ProyectoSistemaEscolar.bd.domain.Alumno;
import ProyectoSistemaEscolar.bd.domain.Calificacion;
import ProyectoSistemaEscolar.bd.domain.Grupo;
import ProyectoSistemaEscolar.bd.domain.Profesor;
import ProyectoSistemaEscolar.bd.domain.Union;
import ProyectoSistemaEscolar.dao.alumnos.AlumnoDaoImpl;
import ProyectoSistemaEscolar.dao.calificacion.CalificacionDaoImpl;
import ProyectoSistemaEscolar.dao.grupos.GrupoDaoImpl;
import ProyectoSistemaEscolar.dao.profesores.ProfesorDaoImpl;
import ProyectoSistemaEscolar.dao.union.UnionDaoImpl;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alber
 */
public class calificacionesModal extends javax.swing.JFrame {
    private DefaultTableModel dtm;
    private Object[] fila = new Object[6];
    private ArrayList<Profesor> globalProfes;
    private ArrayList<Grupo> globalG;
    private calificaciones papa ;
    private void listar(){
        dtm = (DefaultTableModel) profeTb.getModel();
        //UnionDaoImpl unionService = new UnionDaoImpl();
        //ArrayList<Union> uniones = unionService.listarUniones();
        UnionDaoImpl uni = new UnionDaoImpl();
        
        
        ProfesorDaoImpl profeService = new ProfesorDaoImpl();
        ArrayList<Profesor> profesores = profeService.listarProfesor();
        globalProfes = profesores;
        for (Profesor profe : profesores) {
            fila[0] = profe.getId_profesor();
            fila[1] = profe.getNombres();
            fila[2] = profe.getApellido_paterno();
            fila[3] = profe.getApellido_materno();
            String cadena = uni.listarGrupoProfe(profe.getId_profesor());
            //System.out.println(cadena);
            if(cadena.length() != 0){
                fila[4] = cadena;
            }else{
                fila[4] = "No esta asignado";
            }
            
            dtm.addRow(fila);
        }
    }
    
    private void listarCombo(){
        GrupoDaoImpl grupoService = new GrupoDaoImpl();
        ArrayList<Grupo> grupos = grupoService.listarGrupo();
        globalG = grupos;
        for (Grupo grupo : grupos) {
            gruposBox.addItem(grupo.getNombre());
            //System.out.println("id_grupo: "+grupo.getId_grupo()+", nombre: "+grupo.getNombre());
        }
    }
    
    public void llamar() {
        for (int i = 0; i < profeTb.getRowCount(); i++) {
            dtm.removeRow(i);
            i--;
        }
        listar();
        //listarCombo();
    }
    
    public void asignar(calificaciones ant) {
        papa = ant;
    }

    /**
     * Creates new form calificacionesModal
     */
    public calificacionesModal() {
        initComponents();
        listar();
        listarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        gruposBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        profeTb = new javax.swing.JTable();
        enviarBtn = new javax.swing.JButton();
        eliminarBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        profeTb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nombre(s)", "Apellido paterno", "Apellido materno", "Grupo Asignado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(profeTb);

        enviarBtn.setBackground(new java.awt.Color(45, 149, 150));
        enviarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Check.png"))); // NOI18N
        enviarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarBtnActionPerformed(evt);
            }
        });

        eliminarBtn.setBackground(new java.awt.Color(255, 0, 0));
        eliminarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/flecha_izq.png"))); // NOI18N
        eliminarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("Eliminar Asignacion");

        jLabel2.setText("Asignar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(gruposBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 13, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(eliminarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(enviarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(39, 39, 39))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(gruposBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(enviarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eliminarBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enviarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarBtnActionPerformed
        //System.out.println(alumnosTb.getSelectedRow());

        try {
            int selectedRow = profeTb.getSelectedRow();

            if (selectedRow == -1) {
                throw new IndexOutOfBoundsException("No se ha seleccionado ninguna fila");
            }
            
            CalificacionDaoImpl instance = new CalificacionDaoImpl();
            
            
            UnionDaoImpl uni = new UnionDaoImpl();
            
            
            Profesor profeElegido = new Profesor();
            profeElegido.setId_profesor((int) dtm.getValueAt(selectedRow, 0));
            
            ArrayList<Union> comprobacion = uni.listarUnionesProfes(profeElegido.getId_profesor());
            
            if(comprobacion.isEmpty()){
                //System.out.println(gruposBox.getSelectedIndex());
                GrupoDaoImpl grupoService = new GrupoDaoImpl();
                Grupo grupoElegido = globalG.get(gruposBox.getSelectedIndex());


                ArrayList<Alumno> alumnosGrupo = new ArrayList<>();
                alumnosGrupo = grupoService.listarAlumnosGrupo(grupoElegido.getId_grupo());
                if(!alumnosGrupo.isEmpty()){
                    Calificacion calificacion = new Calificacion();
                    for (Alumno alumno : alumnosGrupo) {
                        //System.out.println(alumno.getNombre());
                        int idCali = instance.crearCalificacion(calificacion);
                        //System.out.println(idCali);
                        Union lista = new Union();
                        lista.setId_alumno(alumno.getId_alumno());
                        lista.setId_profesor(profeElegido.getId_profesor());
                        lista.setId_calificacion(idCali);
                        uni.registrarUnion(lista);
                    }
                    llamar();
                    JOptionPane.showMessageDialog(rootPane,"Asignado");
                    papa.llamar();
                }else{
                    JOptionPane.showMessageDialog(rootPane,"No hay alumnos");
                }
            }else{
                JOptionPane.showMessageDialog(rootPane,"Ya esta asignado");
            }
        } catch (IndexOutOfBoundsException e) {
            // Manejo de la excepción cuando no se selecciona ninguna fila
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_enviarBtnActionPerformed

    private void eliminarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarBtnActionPerformed
        /*CalificacionDaoImpl instance = new CalificacionDaoImpl();
         int temp = 15;
        System.out.println(instance.eliminarCalificacion(temp));
        */
        try {
            int selectedRow = profeTb.getSelectedRow();

            if (selectedRow == -1) {
                throw new IndexOutOfBoundsException("No se ha seleccionado ninguna fila");
            }
            Profesor profeElegido = new Profesor();
            profeElegido.setId_profesor((int) dtm.getValueAt(selectedRow, 0));
            UnionDaoImpl uni = new UnionDaoImpl();
            ArrayList<Union> comprobacion = uni.listarUnionesProfes(profeElegido.getId_profesor());
            if(!comprobacion.isEmpty()){
                CalificacionDaoImpl instance = new CalificacionDaoImpl();
            
                if(JOptionPane.showConfirmDialog(rootPane, "Seguro que desea eliminar la asignacion?", "Eliminar asignacion", JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE)==0){
                    for (Union union : comprobacion) {
                        instance.eliminarCalificacion(union.getId_calificacion());
                        //System.out.println(instance.eliminarCalificacion(temp));
                    }
                    
                    uni.eliminarUnionTodas(profeElegido.getId_profesor());
                    JOptionPane.showMessageDialog(rootPane, "Asignacion eliminada");
                    llamar();
                    papa.llamar();
                }else{
                    JOptionPane.showMessageDialog(rootPane, "No se elimino");
                }
            }else{
                JOptionPane.showMessageDialog(rootPane, "No esta asignado");
            }

        } catch (IndexOutOfBoundsException e) {
            // Manejo de la excepción cuando no se selecciona ninguna fila
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila de la tabla", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_eliminarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calificacionesModal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calificacionesModal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calificacionesModal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calificacionesModal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new calificacionesModal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eliminarBtn;
    private javax.swing.JButton enviarBtn;
    private javax.swing.JComboBox<String> gruposBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable profeTb;
    // End of variables declaration//GEN-END:variables
}
